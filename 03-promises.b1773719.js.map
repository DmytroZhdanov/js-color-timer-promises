{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAI,uBAAqBH,QAAiBC,OAExCG,EAAE,sBAAoBJ,QAAeC,MAAU,GAElDA,EAAM,G,EAvCA,CACXA,MAAOQ,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,WAG1BG,KAAKC,iBAAiB,UAE3B,SAAoBC,GAClBA,EAAIC,iBAEJ,MACEC,UAAUhB,MAAEA,EAAKU,KAAEA,EAAIC,OAAEA,IACvBG,EAAIG,cAER,IAAKjB,EAAMkB,MAAQ,IAAMR,EAAKQ,MAAQ,IAAMP,EAAOO,MAAQ,EAEzD,YADAtB,EAAAuB,OAAOC,QAAQ,sCAIjB,IAAK,IAAIC,EAAI,EAAGA,GAAKV,EAAOO,MAAOG,GAAK,EAAG,CACzC,MAAMC,GAAgBtB,EAAMkB,QAASR,EAAKQ,MAAQG,EAElDvB,EAAcuB,EAAGC,GACdC,MAAKC,GAAU5B,EAAAuB,OAAOM,QAAQD,KAC9BE,OAAMC,GAAS/B,EAAAuB,OAAOC,QAAQO,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSbmt);\n\nfunction onFormSbmt(evt) {\n  evt.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n\n  if (+delay.value < 0 || +step.value < 0 || +amount.value < 0) {\n    Notify.failure('Please, enter only positive values')\n    return\n  }\n\n  for (let i = 0; i < +amount.value; i += 1) {\n    const countedDelay = +delay.value + +step.value * i;\n\n    createPromise(i, countedDelay)\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","document","querySelector","step","amount","form","addEventListener","evt","preventDefault","elements","currentTarget","value","Notify","failure","i","countedDelay","then","result","success","catch","error"],"version":3,"file":"03-promises.b1773719.js.map"}